<?xml version="1.0"?>
<doc>
    <assembly>
        <name>ZATAppApi</name>
    </assembly>
    <members>
        <member name="M:ZATAppApi.Areas.HelpPage.ApiDescriptionExtensions.GetFriendlyId(System.Web.Http.Description.ApiDescription)">
            <summary>
            Generates an URI-friendly ID for the <see cref="T:System.Web.Http.Description.ApiDescription"/>. E.g. "Get-Values-id_name" instead of "GetValues/{id}?name={name}"
            </summary>
            <param name="description">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The ID as a string.</returns>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.HelpPageConfig">
            <summary>
            Use this class to customize the Help Page.
            For example you can set a custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> to supply the documentation
            or you can provide the samples for the requests/responses.
            </summary>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.Controllers.HelpController">
            <summary>
            The controller that will handle requests for the help page.
            </summary>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetDocumentationProvider(System.Web.Http.HttpConfiguration,System.Web.Http.Description.IDocumentationProvider)">
            <summary>
            Sets the documentation provider for help page.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="documentationProvider">The documentation provider.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleObjects(System.Web.Http.HttpConfiguration,System.Collections.Generic.IDictionary{System.Type,System.Object})">
            <summary>
            Sets the objects that will be used by the formatters to produce sample requests/responses.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleObjects">The sample objects.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type and action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleRequest(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample request directly for the specified media type and action with parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample request.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String)">
            <summary>
            Sets the sample request directly for the specified media type of the action.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleResponse(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.String,System.String,System.String[])">
            <summary>
            Sets the sample response directly for the specified media type of the action with specific parameters.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample response.</param>
            <param name="mediaType">The media type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForMediaType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Sets the sample directly for all actions with the specified media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetSampleForType(System.Web.Http.HttpConfiguration,System.Object,System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Sets the sample directly for all actions with the specified type and media type.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sample">The sample.</param>
            <param name="mediaType">The media type.</param>
            <param name="type">The parameter type or return type of an action.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualRequestType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate request samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String)">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetActualResponseType(System.Web.Http.HttpConfiguration,System.Type,System.String,System.String,System.String[])">
            <summary>
            Specifies the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> returned as part of the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            The help page will use this information to produce more accurate response samples.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="type">The type.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <returns>The help page sample generator.</returns>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.SetHelpPageSampleGenerator(System.Web.Http.HttpConfiguration,ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator)">
            <summary>
            Sets the help page sample generator.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="sampleGenerator">The help page sample generator.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.GetModelDescriptionGenerator(System.Web.Http.HttpConfiguration)">
            <summary>
            Gets the model description generator.
            </summary>
            <param name="config">The configuration.</param>
            <returns>The <see cref="T:ZATAppApi.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator"/></returns>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageConfigurationExtensions.GetHelpPageApiModel(System.Web.Http.HttpConfiguration,System.String)">
            <summary>
            Gets the model that represents an API displayed on the help page. The model is initialized on the first call and cached for subsequent calls.
            </summary>
            <param name="config">The <see cref="T:System.Web.Http.HttpConfiguration"/>.</param>
            <param name="apiDescriptionId">The <see cref="T:System.Web.Http.Description.ApiDescription"/> ID.</param>
            <returns>
            An <see cref="T:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel"/>
            </returns>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.ModelDescriptions.ModelDescription">
            <summary>
            Describes a type model.
            </summary>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.ModelDescriptions.ModelDescriptionGenerator">
            <summary>
            Generates model descriptions for given types.
            </summary>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.ModelDescriptions.ModelNameAttribute">
            <summary>
            Use this attribute to change the name of the <see cref="T:ZATAppApi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> generated for a type.
            </summary>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel">
            <summary>
            The model that represents an API displayed on the help page.
            </summary>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel"/> class.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription">
            <summary>
            Gets or sets the <see cref="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.ApiDescription"/> that describes the API.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.UriParameters">
            <summary>
            Gets or sets the <see cref="T:ZATAppApi.Areas.HelpPage.ModelDescriptions.ParameterDescription"/> collection that describes the URI parameters for the API.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.RequestDocumentation">
            <summary>
            Gets or sets the documentation for the request.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.RequestModelDescription">
            <summary>
            Gets or sets the <see cref="T:ZATAppApi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the request body.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.RequestBodyParameters">
            <summary>
            Gets the request body parameter descriptions.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.ResourceDescription">
            <summary>
            Gets or sets the <see cref="T:ZATAppApi.Areas.HelpPage.ModelDescriptions.ModelDescription"/> that describes the resource.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.ResourceProperties">
            <summary>
            Gets the resource property descriptions.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.SampleRequests">
            <summary>
            Gets the sample requests associated with the API.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.SampleResponses">
            <summary>
            Gets the sample responses associated with the API.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.Models.HelpPageApiModel.ErrorMessages">
            <summary>
            Gets the error messages associated with this model.
            </summary>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator">
            <summary>
            This class will generate the samples for the help page.
            </summary>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.#ctor">
            <summary>
            Initializes a new instance of the <see cref="T:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator"/> class.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.ActualHttpMessageTypes">
            <summary>
            Gets CLR types that are used as the content of <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/>.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples">
            <summary>
            Gets the objects that are used directly as samples for certain actions.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects">
            <summary>
            Gets the objects that are serialized as samples by the supported formatters.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories">
            <summary>
            Gets factories for the objects that the supported formatters will serialize as samples. Processed in order,
            stopping when the factory successfully returns a non-<see langref="null"/> object.
            </summary>
            <remarks>
            Collection includes just <see cref="M:ZATAppApi.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)"/> initially. Use
            <code>SampleObjectFactories.Insert(0, func)</code> to provide an override and
            <code>SampleObjectFactories.Add(func)</code> to provide a fallback.</remarks>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleRequests(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the request body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleResponses(System.Web.Http.Description.ApiDescription)">
            <summary>
            Gets the response body samples for a given <see cref="T:System.Web.Http.Description.ApiDescription"/>.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.GetSample(System.Web.Http.Description.ApiDescription,ZATAppApi.Areas.HelpPage.SampleDirection)">
            <summary>
            Gets the request or response body samples.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The samples keyed by media type.</returns>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.GetActionSample(System.String,System.String,System.Collections.Generic.IEnumerable{System.String},System.Type,System.Net.Http.Formatting.MediaTypeFormatter,System.Net.Http.Headers.MediaTypeHeaderValue,ZATAppApi.Areas.HelpPage.SampleDirection)">
            <summary>
            Search for samples that are provided directly through <see cref="P:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.ActionSamples"/>.
            </summary>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="type">The CLR type.</param>
            <param name="formatter">The formatter.</param>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or for a response.</param>
            <returns>The sample that matches the parameters.</returns>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.GetSampleObject(System.Type)">
            <summary>
            Gets the sample object that will be serialized by the formatters. 
            First, it will look at the <see cref="P:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjects"/>. If no sample object is found, it will try to create
            one using <see cref="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.DefaultSampleObjectFactory(ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator,System.Type)"/> (which wraps an <see cref="T:ZATAppApi.Areas.HelpPage.ObjectGenerator"/>) and other
            factories in <see cref="P:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.SampleObjectFactories"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>The sample object.</returns>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.ResolveHttpRequestMessageType(System.Web.Http.Description.ApiDescription)">
            <summary>
            Resolves the actual type of <see cref="T:System.Net.Http.ObjectContent`1"/> passed to the <see cref="T:System.Net.Http.HttpRequestMessage"/> in an action.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <returns>The type.</returns>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.ResolveType(System.Web.Http.Description.ApiDescription,System.String,System.String,System.Collections.Generic.IEnumerable{System.String},ZATAppApi.Areas.HelpPage.SampleDirection,System.Collections.ObjectModel.Collection{System.Net.Http.Formatting.MediaTypeFormatter}@)">
            <summary>
            Resolves the type of the action parameter or return value when <see cref="T:System.Net.Http.HttpRequestMessage"/> or <see cref="T:System.Net.Http.HttpResponseMessage"/> is used.
            </summary>
            <param name="api">The <see cref="T:System.Web.Http.Description.ApiDescription"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
            <param name="sampleDirection">The value indicating whether the sample is for a request or a response.</param>
            <param name="formatters">The formatters.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleGenerator.WriteSampleObjectUsingFormatter(System.Net.Http.Formatting.MediaTypeFormatter,System.Object,System.Type,System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Writes the sample object using formatter.
            </summary>
            <param name="formatter">The formatter.</param>
            <param name="value">The value.</param>
            <param name="type">The type.</param>
            <param name="mediaType">Type of the media.</param>
            <returns></returns>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.HelpPageSampleKey">
            <summary>
            This is used to identify the place where the sample should be applied.
            </summary>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue)">
            <summary>
            Creates a new <see cref="T:ZATAppApi.Areas.HelpPage.HelpPageSampleKey"/> based on media type.
            </summary>
            <param name="mediaType">The media type.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,System.Type)">
            <summary>
            Creates a new <see cref="T:ZATAppApi.Areas.HelpPage.HelpPageSampleKey"/> based on media type and CLR type.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="type">The CLR type.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.#ctor(ZATAppApi.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ZATAppApi.Areas.HelpPage.HelpPageSampleKey"/> based on <see cref="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="sampleDirection">The <see cref="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.#ctor(System.Net.Http.Headers.MediaTypeHeaderValue,ZATAppApi.Areas.HelpPage.SampleDirection,System.String,System.String,System.Collections.Generic.IEnumerable{System.String})">
            <summary>
            Creates a new <see cref="T:ZATAppApi.Areas.HelpPage.HelpPageSampleKey"/> based on media type, <see cref="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>, controller name, action name and parameter names.
            </summary>
            <param name="mediaType">The media type.</param>
            <param name="sampleDirection">The <see cref="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.</param>
            <param name="controllerName">Name of the controller.</param>
            <param name="actionName">Name of the action.</param>
            <param name="parameterNames">The parameter names.</param>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.ControllerName">
            <summary>
            Gets the name of the controller.
            </summary>
            <value>
            The name of the controller.
            </value>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.ActionName">
            <summary>
            Gets the name of the action.
            </summary>
            <value>
            The name of the action.
            </value>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.MediaType">
            <summary>
            Gets the media type.
            </summary>
            <value>
            The media type.
            </value>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.ParameterNames">
            <summary>
            Gets the parameter names.
            </summary>
        </member>
        <member name="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection">
            <summary>
            Gets the <see cref="P:ZATAppApi.Areas.HelpPage.HelpPageSampleKey.SampleDirection"/>.
            </summary>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.ImageSample">
            <summary>
            This represents an image sample on the help page. There's a display template named ImageSample associated with this class.
            </summary>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.ImageSample.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZATAppApi.Areas.HelpPage.ImageSample"/> class.
            </summary>
            <param name="src">The URL of an image.</param>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.InvalidSample">
            <summary>
            This represents an invalid sample on the help page. There's a display template named InvalidSample associated with this class.
            </summary>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.ObjectGenerator">
            <summary>
            This class will create an object of a given type and populate it with sample data.
            </summary>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.ObjectGenerator.GenerateObject(System.Type)">
            <summary>
            Generates an object for a given type. The type needs to be public, have a public default constructor and settable public properties/fields. Currently it supports the following types:
            Simple types: <see cref="T:System.Int32"/>, <see cref="T:System.String"/>, <see cref="T:System.Enum"/>, <see cref="T:System.DateTime"/>, <see cref="T:System.Uri"/>, etc.
            Complex types: POCO types.
            Nullables: <see cref="T:System.Nullable`1"/>.
            Arrays: arrays of simple types or complex types.
            Key value pairs: <see cref="T:System.Collections.Generic.KeyValuePair`2"/>
            Tuples: <see cref="T:System.Tuple`1"/>, <see cref="T:System.Tuple`2"/>, etc
            Dictionaries: <see cref="T:System.Collections.Generic.IDictionary`2"/> or anything deriving from <see cref="T:System.Collections.Generic.IDictionary`2"/>.
            Collections: <see cref="T:System.Collections.Generic.IList`1"/>, <see cref="T:System.Collections.Generic.IEnumerable`1"/>, <see cref="T:System.Collections.Generic.ICollection`1"/>, <see cref="T:System.Collections.IList"/>, <see cref="T:System.Collections.IEnumerable"/>, <see cref="T:System.Collections.ICollection"/> or anything deriving from <see cref="T:System.Collections.Generic.ICollection`1"/> or <see cref="T:System.Collections.IList"/>.
            Queryables: <see cref="T:System.Linq.IQueryable"/>, <see cref="T:System.Linq.IQueryable`1"/>.
            </summary>
            <param name="type">The type.</param>
            <returns>An object of the given type.</returns>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.SampleDirection">
            <summary>
            Indicates whether the sample is used for request or response
            </summary>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.TextSample">
            <summary>
            This represents a preformatted text sample on the help page. There's a display template named TextSample associated with this class.
            </summary>
        </member>
        <member name="T:ZATAppApi.Areas.HelpPage.XmlDocumentationProvider">
            <summary>
            A custom <see cref="T:System.Web.Http.Description.IDocumentationProvider"/> that reads the API documentation from an XML documentation file.
            </summary>
        </member>
        <member name="M:ZATAppApi.Areas.HelpPage.XmlDocumentationProvider.#ctor(System.String)">
            <summary>
            Initializes a new instance of the <see cref="T:ZATAppApi.Areas.HelpPage.XmlDocumentationProvider"/> class.
            </summary>
            <param name="documentPath">The physical path to XML document.</param>
        </member>
        <member name="T:ZATAppApi.Models.AccountingLog">
            <summary>
            Log to store debit and credit information of tghe system
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.AccountingLog.#ctor(System.Int64)">
            <summary>
            Constructor to initialize values form the database
            </summary>
            <param name="id">primary key</param>
        </member>
        <member name="M:ZATAppApi.Models.AccountingLog.#ctor(System.Decimal,System.Decimal,ZATAppApi.Models.Driver)">
            <summary>
            Constructor to add new record to the log 
            </summary>
            <param name="credit">credit w.r.t driver (|Balance-Amount|)</param>
            <param name="debit">debit w.r.t driver (Balance+Amount)</param>
            <param name="driver">User who's transactions will be managed</param>
        </member>
        <member name="P:ZATAppApi.Models.AccountingLog.AccountLogId">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.AccountingLog.Credit">
            <summary>
            credit w.r.t driver (|Balance-Amount|)
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.AccountingLog.Debit">
            <summary>
            debit w.r.t driver (Balance+Amount)
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.AccountingLog.EntryTime">
            <summary>
            User who's transactions will be managed
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.AccountingLog.GetAdminDebit">
            <summary>
            Mehtod to get the amount which is due on all drivers
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.AccountingLog.GetAdminCredit">
            <summary>
            Mehtod to get the amount which is in excess to the admin
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.AccountingLog.GetAdminCreditByMonth(System.DateTime)">
            <summary>
            Mehtod to get the amount which is in excess to the admin by some month
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.AccountingLog.GetAdminDebitByMonth(System.DateTime)">
            <summary>
            Mehtod to get the amount which is in due on the drivers by some month
            </summary>
            <param name="month"></param>
            <returns></returns>
        </member>
        <member name="T:ZATAppApi.Models.Common.Location">
            <summary>
            Structure to store location attributes
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Driver">
            <summary>
            A user of the system who picks up the ride and does related tasks
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Driver.#ctor(ZATAppApi.Models.User.NameFormat,ZATAppApi.Models.User.ContactNumberFormat,System.Decimal,ZATAppApi.Models.Common.Location)">
            <summary>
            Constructor to add new Driver to the database
            </summary>
            <param name="name">Full Name of the driver</param>
            <param name="contactNumber">Contact Number of the driver</param>
            <param name="creditLimit">Credit Limit to which the driver can use the app, after that the acount will be blocked</param>
            <param name="lastLocation">Last known location of the driver</param>
        </member>
        <member name="M:ZATAppApi.Models.Driver.#ctor(System.Int64)">
            <summary>
            Constructor to initialize a driver's data from the database
            </summary>
            <param name="id">Primary Key</param>
        </member>
        <member name="P:ZATAppApi.Models.Driver.CreditLimit">
            <summary>
            Limit of amount, for a driver, to be unpaid to the admin 
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Driver.LastLocation">
            <summary>
            Last known Location of the Driver
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Driver.IsBooked">
            <summary>
            Flag to check if the driver is booked to a ride or not.
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Driver.Balance">
            <summary>
            Balance of the amount of the driver to service provider
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Driver.GetVehicle">
            <summary>
            Method to get the vehicle which owned by the driver
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.Driver.AddOrChangeVehicle(ZATAppApi.Models.Exceptions.Vehicle.RegisterationNumberFormat,System.String,System.Int32,System.Boolean,ZATAppApi.Models.Exceptions.Vehicle.Colors,ZATAppApi.Models.VehicleType)">
            <summary>
            Method use to add a new or change if already had a vehicle. Changing a vehicle will delete the previous one.
            </summary>
            <param name="registerationNumber">Registeration Number of the vehicle provided by the government</param>
            <param name="model">model or make of the vehicle</param>
            <param name="engineCC">Engine of the vehicle</param>
            <param name="isAc">Whether if the vehicle is air conditioned</param>
            <param name="color">Color of the card</param>
            <param name="type">Type of the vehicle</param>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.Driver.MakeManualTransaction(System.Decimal)">
            <summary>
            Method to make manual transaction of amount for the driver
            </summary>
            <param name="amount">Amount to be transacted</param>
        </member>
        <member name="M:ZATAppApi.Models.Driver.GetManualTransactions">
            <summary>
            Method to get list of Manual Transactions made by the driver
            </summary>
            <returns>List of Manual Transaction in chronological order</returns>
        </member>
        <member name="M:ZATAppApi.Models.Driver.MakeMobileAccountTransaction(System.String,System.String,System.Decimal)">
            <summary>
            Method to add mobile account transaction information to the database
            </summary>
            <param name="refNumber">Reference number provided by the Service Provider on transaction</param>
            <param name="mobileAccountService">Name of the Service through which the transaction is being processed</param>
            <param name="amount">Amount to be transacted</param>
        </member>
        <member name="M:ZATAppApi.Models.Driver.GetAllMobileAccountTransactions">
            <summary>
            Method to get a list of transaction made through the mobile account by the driver
            </summary>
            <returns>List of Mobile Account Transactions in chronological order</returns>
        </member>
        <member name="M:ZATAppApi.Models.Driver.GetAllDrivers">
            <summary>
            Method to get list of all drivers present in the database
            </summary>
            <returns>List of drivers in chronological order</returns>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.DbQueryProcessingFailedException">
            <summary>
            Exception will be thrown whenever Database query or stored procedure calling process fails.
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Exceptions.DbQueryProcessingFailedException.InnerSQLException">
            <summary>
            Original SQL Exception caused the problem
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.MalValueArrivedException">
            <summary>
            Exception thrown whenever some unwanted values are found
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.NotAuthorizedToChangeValueExeption">
            <summary>
            Exception thrown if the value of a veriable is not allowed to change its value
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Exceptions.NotAuthorizedToChangeValueExeption.#ctor(System.String,System.String)">
            <summary>
            
            </summary>
            <param name="path"></param>
            <param name="variableName"></param>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.PrimaryKeyNotForEntityException">
            <summary>
            Exception throw whenever the primary key of an entity will be tried to use to access a sibling entity.
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.UnsuccessfullProcessException">
            <summary>
            Exception thrown whenever a process don't fulfill as user demand
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.UpdateUnsuccessfulException">
            <summary>
            Exception thrown whenever the update process remain unsuccessful
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.UserNotRegisteredException">
            <summary>
            Exception will be thrown when the addition of the user to ASP Identity failed
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.ValueLengthExceedsException">
            <summary>
            Exception thrown whenever a value enter to the string exceeds to the defined limit
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Exceptions.ValueLengthExceedsException.#ctor(System.String,System.Int32)">
            <summary>
            Contructor which initialzes the message
            </summary>
            <param name="value">Entered by the user</param>
            <param name="definedLength">Defined Length of the string</param>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.Vehicle">
            <summary>
            Driver has a vehicle by which it picks up the ride
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Exceptions.Vehicle.#ctor(ZATAppApi.Models.Exceptions.Vehicle.RegisterationNumberFormat,System.String,System.Int32,System.Boolean,ZATAppApi.Models.Exceptions.Vehicle.Colors,ZATAppApi.Models.VehicleType,ZATAppApi.Models.Driver)">
            <summary>
            Constructor to add a new vehicle
            </summary>
            <param name="registerationNumber">Registeration Number of the vehicle provided by the government</param>
            <param name="model">model or make of the vehicle</param>
            <param name="engineCC">Engine of the vehicle</param>
            <param name="isAc">Whether if the vehicle is air conditioned</param>
            <param name="color">Color of the Vehicle</param>
            <param name="type">Type of the vehicle</param>
            <param name="driver">Driver who owns the vehicle</param>
        </member>
        <member name="M:ZATAppApi.Models.Exceptions.Vehicle.#ctor(System.Int32)">
            <summary>
            Constructor to initialize values from the database
            </summary>
            <param name="id">Primary Key</param>
        </member>
        <member name="P:ZATAppApi.Models.Exceptions.Vehicle.Type">
            <summary>
            Type to which the vehicle belongs
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Exceptions.Vehicle.Driver">
            <summary>
            Driver who owns the car
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Exceptions.Vehicle.EngineCC">
            <summary>
            Engine power of the vehicle
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Exceptions.Vehicle.VehicleColor">
            <summary>
            Color of the Vehicle
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Exceptions.Vehicle.Model">
            <summary>
            Model or make of the car
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Exceptions.Vehicle.RegisterationNumber">
            <summary>
            Registeration Number provided by the government
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Exceptions.Vehicle.IsAC">
            <summary>
            Value indicates the air condition in the vehicle
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Exceptions.Vehicle.VehicleId">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Exceptions.Vehicle.GetAllVehicles">
            <summary>
            Method to get all vehicles present in the database
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.Vehicle.RegisterationNumberFormat">
            <summary>
            Vehicle's Registeration Number Format
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.Vehicle.Colors">
            <summary>
            Vehicle's Colors
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Exceptions.Vehicle.Engines">
            <summary>
            Engine's CC for a vehicle 
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.Fare">
            <summary>
            Fare is associated with every type of ride, will be taken after the ride ends
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Fare.#ctor(System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.Decimal,System.DateTime,ZATAppApi.Models.VehicleType)">
            <summary>
            Constructor to add new fare info to the database
            </summary>
            <param name="pickUpFare">Fare to be due on a ride pick-up</param>
            <param name="dropOffFare">Fare to be due on a ride drop-off</param>
            <param name="gstPercent">Percent of government applied tax on the ride</param>
            <param name="serviceChargePercent">Percent of charges taken by the service provider on every ride</param>
            <param name="distanceTravelledPerKmFee">Amount to be taken on every km of ride</param>
            <param name="date">Date on which the fare updated</param>
            <param name="type">Type of vehicle on which the fare is applicable</param>
        </member>
        <member name="M:ZATAppApi.Models.Fare.#ctor(System.Int32)">
            <summary>
            Constructor ro initialize values from the database
            </summary>
            <param name="id">Primary Key</param>
        </member>
        <member name="P:ZATAppApi.Models.Fare.VehicleType">
            <summary>
            Type of vehicle on which the fare is applicable
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Fare.Date">
            <summary>
            Date on which the fare updated for the vehicle type
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Fare.DistanceTravelledPerKm">
            <summary>
            Amount taken on per km distance of ride
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Fare.ServiceChargesPercent">
            <summary>
            Serivce Charges percentage will be duducted by the admin
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Fare.GSTPercent">
            <summary>
            Percentage of Governemnt applied genral sales tax
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Fare.DropOffFare">
            <summary>
            Fixed amount taken on every drop-off of the ride
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Fare.PickUpFare">
            <summary>
            Fixed amount taken on every pick-up of the ride
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Fare.FareId">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Fare.GetAllFares">
            <summary>
            Static Method to get all fares present in the database
            </summary>
            <returns>List of Fares in chronological order</returns>
        </member>
        <member name="T:ZATAppApi.Models.ManualTransactionLog">
            <summary>
            Manual Transactions recorder
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.ManualTransactionLog.#ctor(System.Decimal,System.DateTime,ZATAppApi.Models.Driver)">
            <summary>
            Constructor to add new record for transaction
            </summary>
            <param name="amount">Amount of Transaction</param>
            <param name="dateTime">Date and time of the Transaction</param>
            <param name="driver">User who made the transaction</param>
        </member>
        <member name="M:ZATAppApi.Models.ManualTransactionLog.#ctor(System.Int64)">
            <summary>
            Constructor to initialize values from the database
            </summary>
            <param name="id">Primary Key</param>
        </member>
        <member name="P:ZATAppApi.Models.ManualTransactionLog.TransactionId">
            <summary>
            Primary key
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.ManualTransactionLog.TransactionDateTime">
            <summary>
            Date and Time at which the transaction made
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.ManualTransactionLog.Amount">
            <summary>
            Amount of transaction
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.ManualTransactionLog.Driver">
            <summary>
            Driver who made the transaction
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.ManualTransactionLog.GetAllTransactions">
            <summary>
            Method which returns the list of all transactions made in the system
            </summary>
            <returns>Sorted List of Transactions by date in chronological order</returns>
        </member>
        <member name="T:ZATAppApi.Models.MobileAccountTransactionLog">
            <summary>
            Transactions done from a mobile acount recorder
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.MobileAccountTransactionLog.#ctor(System.Int64)">
            <summary>
            Constructor to initialize values from database
            </summary>
            <param name="id">Primary Key</param>
        </member>
        <member name="M:ZATAppApi.Models.MobileAccountTransactionLog.#ctor(System.String,System.DateTime,System.Boolean,System.String,System.Decimal,ZATAppApi.Models.Driver)">
            <summary>
            Constructor to add new record to the database
            </summary>
            <param name="refNumber">Reference Number of the tansaction, provided by the service provider</param>
            <param name="dateTime">date and time of transaction to be added to the system</param>
            <param name="isVerified">Status of the transaction. Verified by the Admin on receiving</param>
            <param name="mobileAccountService">Name of the service provider</param>
            <param name="amount">amount of the transaction</param>
            <param name="driver">driver who made the transaction</param>
        </member>
        <member name="P:ZATAppApi.Models.MobileAccountTransactionLog.TransactionId">
            <summary>
            Primary key
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.MobileAccountTransactionLog.ReferenceNumber">
            <summary>
            Reference Number provided by the Mobile Acount Service Provider on transaction
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.MobileAccountTransactionLog.IsVerified">
            <summary>
            Status of the transaction. To be Verified by the Admin.
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.MobileAccountTransactionLog.MobileAccountServiceProviderName">
            <summary>
            Name of the Service Provider
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.MobileAccountTransactionLog.Amount">
            <summary>
            Amount to be transacted
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.MobileAccountTransactionLog.Driver">
            <summary>
            Driver who does the transaction
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.MobileAccountTransactionLog.GetAllMobileAccountTransactions">
            <summary>
            Method to get all mobile account transactions
            </summary>
            <returns>List of Mobile account transactions in chronological order</returns>
        </member>
        <member name="T:ZATAppApi.Models.Rider">
            <summary>
            A user of the System who books the ride and does related tasks
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Rider.#ctor(ZATAppApi.Models.User.NameFormat,ZATAppApi.Models.User.ContactNumberFormat)">
            <summary>
            constructor which adds a new rider to the database
            </summary>
            <param name="name">Full Name of the Rider</param>
            <param name="contactNumber">Contact Number of the Rider</param>
        </member>
        <member name="M:ZATAppApi.Models.Rider.#ctor(System.Int64)">
            <summary>
            Constructor initializes the values from the database
            </summary>
            <param name="id">Primary key</param>
        </member>
        <member name="T:ZATAppApi.Models.Sms">
            <summary>
            Class which represent the text sms of the application
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Sms.#ctor(System.Int64)">
            <summary>
            constructor to initialize the values from the databse
            </summary>
            <param name="id">primary key</param>
        </member>
        <member name="M:ZATAppApi.Models.Sms.#ctor(System.DateTime,System.String)">
            <summary>
            A Text Sms to be sent to the user
            </summary>
            <param name="sentDateTime">time at which the sms is being sent</param>
            <param name="body">Textual body of the SMS</param>
        </member>
        <member name="P:ZATAppApi.Models.Sms.SmsId">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Sms.SentDateTime">
            <summary>
            Date and time at which the sms has been sent
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.Sms.Body">
            <summary>
            Textual Body of the SMS
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.Sms.GetReceivers">
            <summary>
            Method to get all the users who have received the SMS
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.Sms.GetAllSms">
            <summary>
            Static method to get all sms present in the database.
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZATAppApi.Models.SubAdmin">
            <summary>
            A user of the system who performs sub-admin tasks
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.SubAdmin.#ctor(ZATAppApi.Models.User.NameFormat,ZATAppApi.Models.User.ContactNumberFormat)">
            <summary>
            constructor which adds a new sub-admin to the database
            </summary>
            <param name="name">Full Name of the sub-admin</param>
            <param name="contactNumber">Contact Number of the sub-admin</param>
        </member>
        <member name="M:ZATAppApi.Models.SubAdmin.#ctor(System.Int64)">
            <summary>
            Constructor initializes the values from the database
            </summary>
            <param name="id">Primary key</param>
        </member>
        <member name="T:ZATAppApi.Models.User">
            <summary>
            User is the main entity of the system which interacts with the system in different ways.
            </summary>
        </member>
        <member name="F:ZATAppApi.Models.User.id">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.User.#ctor(ZATAppApi.Models.User.NameFormat,ZATAppApi.Models.User.ContactNumberFormat)">
            <summary>
            Constructor to add new user data tuple to the database
            </summary>
            <param name="name">Full Name of the user</param>
            <param name="contactNumber">Contact Number of the user</param>
        </member>
        <member name="M:ZATAppApi.Models.User.#ctor(System.Int64)">
            <summary>
            Constructor to initialize values of a user from the database
            </summary>
            <param name="id">Primary key</param>
        </member>
        <member name="P:ZATAppApi.Models.User.UserId">
            <summary>
            Primary key
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.IsBlocked">
            <summary>
            Property's value indicated wheater the user is authorized to use the application or not.
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.FullName">
            <summary>
            Full Name of the user
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.ContactNumber">
            <summary>
            Contact Number of the user
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.IsActive">
            <summary>
            Shows that the user is active on the application
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.Role">
            <summary>
            Role of the user to the application
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.ApplicationUser">
            <summary>
            Gets ASP.Net Identity user associated with this user.
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.User.SendSms(ZATAppApi.Models.Sms)">
            <summary>
            Method to send SMS to the user. This method just adds the values into the database, 
            in order to send SMS, there should be some service connected to the system and implement its method.
            </summary>
            <param name="sms">Text Sms to be sent</param>
        </member>
        <member name="M:ZATAppApi.Models.User.ReceivedSms">
            <summary>
            Method to get the list of SMS received by the user
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.User.RegisterIdentityUser(ZATAppApi.Models.User.ApplicationRoles,System.String,System.String)">
            <summary>
            Method to register a new account credentials for the user.
            </summary>
            <param name="role">User's role to the application</param>
            <param name="username">User's unique username</param>
            <param name="password">User's password to get log into the system</param>
        </member>
        <member name="M:ZATAppApi.Models.User.ChangePassword(System.String)">
            <summary>
            Method to change password for the user
            </summary>
            <param name="newPassword">new password user want to set</param>
        </member>
        <member name="M:ZATAppApi.Models.User.GetAllUsers">
            <summary>
            Method to get all the user tuples present in the database in the form of a list
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZATAppApi.Models.User.ActiveStatus">
            <summary>
            Shows the active status of a user
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.ActiveStatus.IsActive">
            <summary>
            Flag to check the active status
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.ActiveStatus.StatusTime">
            <summary>
            Represents the time at which the user updated it's active status
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.User.ApplicationRoles">
            <summary>
            Enum which decide the role for the application
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.User.ContactNumberFormat">
            <summary>
            Class to store user's contact details.
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.User.ContactNumberFormat.#ctor(System.String,System.String,System.String)">
            <summary>
            Constructor to initiate contact number class values
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.User.ContactNumberFormat.GetPhoneNumber">
            <summary>
            Method which will return the full phone number.
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.User.ContactNumberFormat.GetInternationalFormatedPhoneNumber">
            <summary>
            Method to get phone number in (+xx-xxx-xxxxxxx) format
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.User.ContactNumberFormat.GetLocalFormatedPhoneNumber">
            <summary>
            Method to get phone number in (0xxx-xxxxxxx)
            </summary>
            <returns></returns>
        </member>
        <member name="T:ZATAppApi.Models.User.NameFormat">
            <summary>
            Full name for a person
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.NameFormat.FirstName">
            <summary>
            Person's First Name.
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.User.NameFormat.LastName">
            <summary>
            Person's Last Name.
            </summary>
        </member>
        <member name="T:ZATAppApi.Models.VehicleType">
            <summary>
            Type of vehicle i.e. Car, Bike, Auto-Rickshaw
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.VehicleType.#ctor(System.Int32)">
            <summary>
            Constructor to initialize values from database
            </summary>
            <param name="id">Primary Key</param>
        </member>
        <member name="M:ZATAppApi.Models.VehicleType.#ctor(System.String,ZATAppApi.Models.VehicleType.FareInfo)">
            <summary>
            Constructor to add new vehicle type to the database
            </summary>
            <param name="name">Name of the type</param>
            <param name="fareInfo">Information of the fare</param>
        </member>
        <member name="P:ZATAppApi.Models.VehicleType.TypeId">
            <summary>
            Primary Key
            </summary>
        </member>
        <member name="P:ZATAppApi.Models.VehicleType.Name">
            <summary>
            Name of the type
            </summary>
        </member>
        <member name="M:ZATAppApi.Models.VehicleType.UpdateFare(ZATAppApi.Models.VehicleType.FareInfo)">
            <summary>
            Method to update fare information about the vehicle type
            </summary>
            <param name="fareInfo">Information about fare</param>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.VehicleType.GetCurrentFare">
            <summary>
            Get information about fare associated with the vehicle type currently
            </summary>
            <returns></returns>
        </member>
        <member name="M:ZATAppApi.Models.VehicleType.GetAllVehicleTypes">
            <summary>
            Method to get all vehicle types present in the database
            </summary>
            <returns></returns>
        </member>
    </members>
</doc>
