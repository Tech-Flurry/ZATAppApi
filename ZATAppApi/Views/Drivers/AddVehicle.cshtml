@model ZATAppApi.ViewModels.AddVehicleViewModel

@{
    ViewBag.Title = "Add New Vehicle";
    List<SelectListItem> lstTypes = new List<SelectListItem>();
    foreach (var item in ZATAppApi.Models.VehicleType.GetAllVehicleTypes())
    {
        lstTypes.Add(new SelectListItem
        {
            Text = item.Name,
            Value = item.TypeId.ToString()
        });
    }
}

<div class="forms">
    <h2 class="title1">Add New Vehicle</h2>
    <div class="form-grids widget-shadow row">
        <div class="form-title">
            <h4>Write details for a new vehicle</h4>
        </div>
        <div class="form-body">
            @using (Html.BeginForm(new { id = ViewBag.DriverId }))
            {
                @Html.AntiForgeryToken()

                if ((bool)ViewBag.ErrorFlag)
                {
                    <div class="panel panel-danger">
                        <div class="panel-heading">
                            <h1 class="panel-title">Error(s)</h1>
                        </div>
                        <div class="panel-body">
                            <p>
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </p>
                        </div>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.CarModel, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.CarModel, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CarModel, "", new { @class = "text-danger" })
                </div>
                <div class="form-group">
                    <label class="control-label">Registration Number</label>
                    <div class="form-inline">
                        @Html.EditorFor(model => model.Alphabets, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Alphabets, "", new { @class = "text-danger" })
                        -
                        @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                        -

                        @Html.EditorFor(model => model.Year, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Year, "", new { @class = "text-danger" })

                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Color, htmlAttributes: new { @class = "control-label" })

                    @Html.EnumDropDownListFor(model => model.Color, "Select Color", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })

                </div>
                    <div class="form-group">
                        @Html.LabelFor(model => model.EngineCC, htmlAttributes: new { @class = "control-label" })

                        @Html.EnumDropDownListFor(model => model.EngineCC, "Select Engine", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.EngineCC, "", new { @class = "text-danger" })

                    </div>
                    <div class="form-group form-inline">
                        @Html.LabelFor(model => model.IsAc, htmlAttributes: new { @class = "control-label" })
                        <div class="checkbox">
                            @Html.EditorFor(model => model.IsAc)
                            @Html.ValidationMessageFor(model => model.IsAc, "", new { @class = "text-danger" })
                        </div>

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.VehicleType, htmlAttributes: new { @class = "control-label col-md-2" })

                        @Html.DropDownListFor(model => model.VehicleType, lstTypes, "Select Type", new { @class = "form-control" })
                        @Html.ValidationMessageFor(model => model.VehicleType, "", new { @class = "text-danger" })

                    </div>
                    @Html.ActionLink("Back", "ViewDetails", new { id = ViewBag.DriverId }, new { @class = "btn btn-primary" })
                    <button type="submit" class="btn btn-default">Save</button>

            }
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
