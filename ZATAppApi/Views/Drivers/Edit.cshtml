@model ZATAppApi.ViewModels.EditDriverViewModel

@{
    ViewBag.Title = "Edit";
}

<div class="forms">
    <h2 class="title1">Edit</h2>
    <div class="form-grids widget-shadow row">
        <div class="form-title">
            <h4>Edit Driver Details</h4>
        </div>
        <div class="form-body">
            @using (Html.BeginForm())
            {
                if ((bool)ViewBag.ErrorFlag)
                {
                    <div class="panel panel-danger">
                        <div class="panel-heading">
                            <h1 class="panel-title">Error(s)</h1>
                        </div>
                        <div class="panel-body">
                            <p>
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </p>
                        </div>
                    </div>
                }
                @Html.AntiForgeryToken()
                @Html.HiddenFor(model=>model.Id)
                <div class="form-group">
                    @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    <label class="control-label">Contact Number</label>
                    <div class="form-inline">

                        <div class="form-group">

                            @Html.EditorFor(model => model.CountryCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CountryCode, "", new { @class = "text-danger" })
                        </div>
                        -
                        <div class="form-group">

                            @Html.EditorFor(model => model.CompanyCode, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CompanyCode, "", new { @class = "text-danger" })
                        </div>
                        -
                        <div class="form-group">

                            @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
                        </div>
                    </div>

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.CreditLimit, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.CreditLimit, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.CreditLimit, "", new { @class = "text-danger" })

                </div>
                @Html.ActionLink("Back", "ViewDetails", new { id = Model.Id }, new { @class = "btn btn-primary" })
                
                <button type="submit" class="btn btn-default">Save</button>
                    
            }
        </div>
    </div>
</div>







<div>
    
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
