@model ZATApp.ViewModels.PromoCodeViewModel

@{
    ViewBag.Title = "Add New Promo Code";
}

<div class="forms">
    <h2 class="title1">@ViewBag.Title</h2>
    <div class="form-grids widget-shadow row">
        <div class="form-title">
            <h4>Enter Values for new Promo Code</h4>
        </div>
        <div class="form-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()
                if ((bool)ViewBag.ErrorFlag)
                {
                    <div class="panel panel-danger">
                        <div class="panel-heading">
                            <h1 class="panel-title">Error(s)</h1>
                        </div>
                        <div class="panel-body">
                            <p>
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            </p>
                        </div>
                    </div>
                }
                <div class="form-group">
                    @Html.LabelFor(model => model.Code, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Code, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. XYZ" } })
                    @Html.ValidationMessageFor(model => model.Code, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Discount, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Discount, new { htmlAttributes = new { @class = "form-control", placeholder="e.g. 10" } })
                    @Html.ValidationMessageFor(model => model.Discount, "", new { @class = "text-danger" })

                </div>

                @Html.ActionLink("Back", "ViewPromos",null,new { @class="btn btn-primary"})
                <button type="submit" class="btn btn-default">Add</button>

            }
        </div>
    </div>
</div>



@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
