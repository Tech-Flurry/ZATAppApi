@model ZATApp.ViewModels.SetFareViewModel

@{
    ViewBag.Title = "Set Fare";
    List<SelectListItem> lstVehicleTypes = new List<SelectListItem>();
    foreach (var item in ZATApp.Models.VehicleType.GetAllVehicleTypes())
    {
        lstVehicleTypes.Add(new SelectListItem
        {
            Text = item.Name,
            Value = item.TypeId.ToString()
        });
    }
}

<div class="forms">
    <h2 class="title1">Set Fare</h2>
    <div class="form-grids widget-shadow row">
        <div class="form-title">
            <h4>Add new Fare Details for a Vehicle Type</h4>
        </div>
        <div class="form-body">
            @using (Html.BeginForm())
            {
                @Html.AntiForgeryToken()

                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.VehicleTypeId, htmlAttributes: new { @class = "control-label" })

                    @Html.DropDownListFor(model => model.VehicleTypeId, lstVehicleTypes, "Select Vehicle Type", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.VehicleTypeId, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DistanceTravelledPerKmCharges, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.DistanceTravelledPerKmCharges, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. Rs. 40" } })
                    @Html.ValidationMessageFor(model => model.DistanceTravelledPerKmCharges, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.PickUpFee, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.PickUpFee, new { htmlAttributes = new { @class = "form-control ", placeholder = "e.g. Rs. 40" } })
                    @Html.ValidationMessageFor(model => model.PickUpFee, "", new { @class = "text-danger" })

                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.DropOffFee, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.DropOffFee, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. Rs. 40" } })
                    @Html.ValidationMessageFor(model => model.DropOffFee, "", new { @class = "text-danger" })

                </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.ServiceCharges, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.ServiceCharges, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. 20%" } })
                        @Html.ValidationMessageFor(model => model.ServiceCharges, "", new { @class = "text-danger" })

                    </div>

                    <div class="form-group">
                        @Html.LabelFor(model => model.GST, htmlAttributes: new { @class = "control-label" })

                        @Html.EditorFor(model => model.GST, new { htmlAttributes = new { @class = "form-control", placeholder = "e.g. 20%" } })
                        @Html.ValidationMessageFor(model => model.GST, "", new { @class = "text-danger" })

                    </div>

                    <button type="submit" class="btn btn-default">Save</button>



            }
        </div>
    </div>

</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
